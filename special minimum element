#include<bits/stdc++.h>
using namespace std;
#define MAX 500
int look[MAX][MAX];
void build(int a[],int n)
{
	for(int i=0;i<n;i++)
	{
		look[i][0]=a[i];
	}
	for(int j=1;(1<<j)<=n;j++)
	{
		for(int i=0;(i+(1<<j)-1)<n;i++)
		{
			if(look[i][j-1]<look[i+(1<<(j-1))][j-1])
			{
				look[i][j]=look[i][j-1];
			}
			else
			{
				look[i][j]=look[i+(1<<(j-1))][j-1];
			}
		}
	}
	
}
int query(int L,int R)
{
	int j=(int)log2(R-L+1);
	if(look[L][j]<=look[R-(1<<j)+1][j])
	{
		return look[L][j];
	}
	else
	{
		return look[R-(1<<j)+1][j];
	}
}
int main()
{
	int a[]={7,2,3,0,5,10,3,12,18};
	int n=sizeof(a)/sizeof(a[0]);
	build(a,n);
	cout<<query(4,7);
	
}
